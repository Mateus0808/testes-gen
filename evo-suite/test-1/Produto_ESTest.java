/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 15 17:00:11 GMT 2024
 */

package com.example;

import org.junit.Test;
import static org.junit.Assert.*;
import com.example.ProdutoQuilo;
import com.example.ProdutoUnitario;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Produto_ESTest extends Produto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("", "", 0.0);
      double double0 = produtoUnitario0.getValor();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProdutoQuilo produtoQuilo0 = new ProdutoQuilo("", "", 673.972, 673.972);
      double double0 = produtoQuilo0.getValor();
      assertEquals(673.972, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProdutoQuilo produtoQuilo0 = new ProdutoQuilo((String) null, (String) null, (-2094.8213211926845), 0.0);
      produtoQuilo0.getNome();
      assertEquals((-2094.8213211926845), produtoQuilo0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProdutoQuilo produtoQuilo0 = new ProdutoQuilo("", "", (-1027.48274241), (-1027.48274241));
      produtoQuilo0.getNome();
      assertEquals((-1027.48274241), produtoQuilo0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProdutoQuilo produtoQuilo0 = new ProdutoQuilo((String) null, (String) null, 2421.1412, 2421.1412);
      produtoQuilo0.getCodigo();
      assertEquals(2421.1412, produtoQuilo0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("", "", 2044.0422076);
      produtoUnitario0.getCodigo();
      assertEquals(2044.0422076, produtoUnitario0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("aoSoR", "aoSoR", 0.0);
      double double0 = produtoUnitario0.calcularValor(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("oNCRs", "oNCRs", 2530.9875644293);
      double double0 = produtoUnitario0.calcularValor(1.0);
      assertEquals(2530.9875644293, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("k/@dR", "k/@dR", (-1.0));
      double double0 = produtoUnitario0.calcularValor(2715.772);
      assertEquals((-2715.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProdutoQuilo produtoQuilo0 = new ProdutoQuilo("", "", (-781.73027), (-781.73027));
      double double0 = produtoQuilo0.getValor();
      assertEquals((-781.73027), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("0vtHv,v-U!g$a4", "0vtHv,v-U!g$a4", 1.1297574414215887);
      produtoUnitario0.setValor(1.1297574414215887);
      assertEquals(1.1297574414215887, produtoUnitario0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("0vtHv,v-U!g$a4", "0vtHv,v-U!g$a4", 1.1297574414215887);
      produtoUnitario0.setNome("0vtHv,v-U!g$a4");
      assertEquals(1.1297574414215887, produtoUnitario0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("0vtHv,v-U!g$a4", "0vtHv,v-U!g$a4", 1.1297574414215887);
      produtoUnitario0.setCodigo("0vtHv,v-U!g$a4");
      assertEquals(1.1297574414215887, produtoUnitario0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("0vtHv,v-U!g$a4", "0vtHv,v-U!g$a4", 1.1297574414215887);
      produtoUnitario0.getNome();
      assertEquals(1.1297574414215887, produtoUnitario0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("0vtHv,v-U!g$a4", "0vtHv,v-U!g$a4", 1.1297574414215887);
      produtoUnitario0.getCodigo();
      assertEquals(1.1297574414215887, produtoUnitario0.getValor(), 0.01);
  }
}
