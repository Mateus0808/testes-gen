/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 15 17:34:05 GMT 2024
 */

package com.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.Caixa;
import com.example.CarrinhoDeCompras;
import com.example.Cliente;
import com.example.EstoqueDeProdutos;
import com.example.OperadorDeCaixa;
import java.util.InputMismatchException;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Cliente_ESTest extends Cliente_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Cliente cliente0 = new Cliente();
      OperadorDeCaixa operadorDeCaixa0 = new OperadorDeCaixa((String) null, "WW/n&nO)T Pe*9tF", "guu|UUo");
      SystemInUtil.addInputLine("170");
      Caixa caixa0 = new Caixa((-1158), operadorDeCaixa0);
      cliente0.realizarCompra(caixa0);
      assertEquals((-1158), caixa0.getNumeroDoCaixa());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Cliente cliente0 = new Cliente();
      OperadorDeCaixa operadorDeCaixa0 = new OperadorDeCaixa("vL;W'", "", "");
      SystemInUtil.addInputLine("vL;W'");
      Caixa caixa0 = new Caixa(0, operadorDeCaixa0);
      // Undeclared exception!
      try { 
        cliente0.realizarCompra(caixa0);
        fail("Expecting exception: InputMismatchException");
      
      } catch(InputMismatchException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Cliente cliente0 = new Cliente();
      // Undeclared exception!
      try { 
        cliente0.realizarCompra((Caixa) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.Cliente", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Cliente cliente0 = new Cliente();
      EstoqueDeProdutos.estoque = null;
      // Undeclared exception!
      try { 
        cliente0.consultarValor("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.EstoqueDeProdutos", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Cliente cliente0 = new Cliente();
      OperadorDeCaixa operadorDeCaixa0 = new OperadorDeCaixa("vL;W'", "", "");
      Caixa caixa0 = new Caixa(0, operadorDeCaixa0);
      // Undeclared exception!
      try { 
        cliente0.realizarCompra(caixa0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Cliente cliente0 = new Cliente();
      CarrinhoDeCompras carrinhoDeCompras0 = cliente0.getCarrinho();
      assertEquals(0.0, carrinhoDeCompras0.getValorCompra(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Cliente cliente0 = new Cliente();
      cliente0.consultarValor("`AlPZ{5");
  }
}
