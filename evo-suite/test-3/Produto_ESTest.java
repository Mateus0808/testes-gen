/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 15 17:43:30 GMT 2024
 */

package com.example;

import org.junit.Test;
import static org.junit.Assert.*;
import com.example.ProdutoQuilo;
import com.example.ProdutoUnitario;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Produto_ESTest extends Produto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProdutoQuilo produtoQuilo0 = new ProdutoQuilo("", "com.example.ProdutoQuilo", 0.0, (-286.6923626492469));
      double double0 = produtoQuilo0.getValor();
      assertEquals(0.0, double0, 0.01);
      assertEquals("com.example.ProdutoQuilo", produtoQuilo0.getNome());
      assertEquals("", produtoQuilo0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("wPu@HTg+@Jcy\"meO<h", "wPu@HTg+@Jcy\"meO<h", 2304.5517);
      double double0 = produtoUnitario0.getValor();
      assertEquals(2304.5517, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProdutoQuilo produtoQuilo0 = new ProdutoQuilo("}W,", "2R DL2sS4R", (-1.0), (-1.0));
      String string0 = produtoQuilo0.getNome();
      assertEquals((-1.0), produtoQuilo0.getValor(), 0.01);
      assertEquals("}W,", produtoQuilo0.getCodigo());
      assertEquals("2R DL2sS4R", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("", "", 0.0);
      produtoUnitario0.getNome();
      assertEquals(0.0, produtoUnitario0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("Qo|U", "Qo|U", 176.248980954232);
      produtoUnitario0.getCodigo();
      assertEquals(176.248980954232, produtoUnitario0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProdutoQuilo produtoQuilo0 = new ProdutoQuilo("", "", (-378.53973776), (-378.53973776));
      produtoQuilo0.getCodigo();
      assertEquals((-378.53973776), produtoQuilo0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("com.example.Produto", "", 757.34687);
      double double0 = produtoUnitario0.calcularValor(0.0);
      assertEquals("com.example.Produto", produtoUnitario0.getCodigo());
      assertEquals("", produtoUnitario0.getNome());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProdutoQuilo produtoQuilo0 = new ProdutoQuilo("", "", (-523.383726240267), (-523.383726240267));
      double double0 = produtoQuilo0.calcularValor((-523.383726240267));
      assertEquals(273930.52489314676, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProdutoQuilo produtoQuilo0 = new ProdutoQuilo("", "", (-523.383726240267), (-523.383726240267));
      double double0 = produtoQuilo0.calcularValor(2414.9844942735);
      assertEquals((-1263963.5834253312), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProdutoQuilo produtoQuilo0 = new ProdutoQuilo("}W,", "2R DL2sS4R", (-1.0), (-1.0));
      double double0 = produtoQuilo0.getValor();
      assertEquals("}W,", produtoQuilo0.getCodigo());
      assertEquals("2R DL2sS4R", produtoQuilo0.getNome());
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario((String) null, (String) null, (-0.8476354542327638));
      produtoUnitario0.setValor((-0.8476354542327638));
      assertEquals((-0.8476354542327638), produtoUnitario0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario((String) null, (String) null, (-0.8476354542327638));
      produtoUnitario0.setNome((String) null);
      assertEquals((-0.8476354542327638), produtoUnitario0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario((String) null, (String) null, (-0.8476354542327638));
      produtoUnitario0.setCodigo((String) null);
      assertEquals((-0.8476354542327638), produtoUnitario0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario((String) null, (String) null, (-0.8476354542327638));
      produtoUnitario0.getNome();
      assertEquals((-0.8476354542327638), produtoUnitario0.getValor(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario((String) null, (String) null, (-0.8476354542327638));
      produtoUnitario0.getCodigo();
      assertEquals((-0.8476354542327638), produtoUnitario0.getValor(), 0.01);
  }
}
