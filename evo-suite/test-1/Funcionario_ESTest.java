/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 15 17:00:37 GMT 2024
 */

package com.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.EstoqueDeProdutos;
import com.example.Funcionario;
import com.example.Produto;
import com.example.ProdutoUnitario;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Funcionario_ESTest extends Funcionario_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario((String) null, (String) null, (String) null);
      String string0 = funcionario0.getUserName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("", "", "");
      funcionario0.setUserName("XM;vXe");
      String string0 = funcionario0.getUserName();
      assertEquals("XM;vXe", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("", "", (String) null);
      String string0 = funcionario0.getSenha();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("", "", "");
      String string0 = funcionario0.getSenha();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario((String) null, (String) null, (String) null);
      String string0 = funcionario0.getNome();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("", "", "");
      funcionario0.setNome("cz`=B3K");
      String string0 = funcionario0.getNome();
      assertEquals("cz`=B3K", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario((String) null, (String) null, (String) null);
      EstoqueDeProdutos.estoque = null;
      // Undeclared exception!
      try { 
        funcionario0.removerProduto((String) null, (-232.563546));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.EstoqueDeProdutos", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("Esponja met\u00E1lica", (String) null, "");
      ProdutoUnitario produtoUnitario0 = new ProdutoUnitario("", "ag[eH`oH ", (-1.0));
      funcionario0.adicionarProduto(produtoUnitario0, 3760.8496389);
      funcionario0.mostrarEstoque();
      funcionario0.mostrarEstoque();
      // Undeclared exception!
      funcionario0.mostrarEstoque();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("com.example.Funcionario", "com.example.Funcionario", "cGc%C/y0");
      EstoqueDeProdutos.estoque = null;
      // Undeclared exception!
      try { 
        funcionario0.mostrarEstoque();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.EstoqueDeProdutos", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("", "", (String) null);
      // Undeclared exception!
      try { 
        funcionario0.adicionarProduto((Produto) null, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.EstoqueDeProdutos", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("", "", "");
      String string0 = funcionario0.getNome();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("", "", "");
      String string0 = funcionario0.getUserName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("", "", "");
      funcionario0.removerProduto("XM;vXe", (-2138.17492549523));
      assertEquals("", funcionario0.getNome());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("", "", "");
      funcionario0.setSenha("");
      assertEquals("", funcionario0.getSenha());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Funcionario funcionario0 = new Funcionario("", "  *", "Manteiga");
      String string0 = funcionario0.getSenha();
      assertEquals("Manteiga", string0);
      assertEquals("  *", funcionario0.getUserName());
      assertEquals("", funcionario0.getNome());
  }
}
